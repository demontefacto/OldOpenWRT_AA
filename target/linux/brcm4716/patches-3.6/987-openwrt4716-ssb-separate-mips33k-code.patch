From: George Kashperko <george@znau.edu.ua>

Separate MIPS 33K code.
Signed-off-by: George Kashperko <george@znau.edu.ua>
---
 drivers/ssb/driver_mipscore.c       |   39 +++++++++++++++++++++-----
 include/linux/ssb/ssb_driver_mips.h |    1 
 2 files changed, 33 insertions(+), 7 deletions(-)
--- linux-3.3.8.orig/drivers/ssb/driver_mipscore.c	2012-10-28 12:11:11.936327700 +0200
+++ linux-3.3.8/drivers/ssb/driver_mipscore.c	2012-10-28 12:11:19.520327181 +0200
@@ -53,7 +53,12 @@ static inline u32 ssb_irqflag(struct ssb
 	return dev->bus->mipscore.irqflag(dev);
 }
 
-static struct ssb_device *find_device(struct ssb_device *rdev, int irqflag)
+unsigned int ssb_mips_irq(struct ssb_device *dev)
+{
+	return dev->bus->mipscore.mips_irq(dev);
+}
+
+static struct ssb_device *find_device33k(struct ssb_device *rdev, int irqflag)
 {
 	struct ssb_bus *bus = rdev->bus;
 	int i;
@@ -71,7 +76,7 @@ static struct ssb_device *find_device(st
  * If disabled, 5 is returned.
  * If not supported, 6 is returned.
  */
-unsigned int ssb_mips_irq(struct ssb_device *dev)
+unsigned int ssb_mips_irq33k(struct ssb_device *dev)
 {
 	struct ssb_bus *bus = dev->bus;
 	struct ssb_device *mdev = bus->mipscore.dev;
@@ -97,7 +102,7 @@ unsigned int ssb_mips_irq(struct ssb_dev
 	return irq;
 }
 
-static void clear_irq(struct ssb_bus *bus, unsigned int irq)
+static void clear_irq33k(struct ssb_bus *bus, unsigned int irq)
 {
 	struct ssb_device *dev = bus->mipscore.dev;
 
@@ -111,7 +116,7 @@ static void clear_irq(struct ssb_bus *bu
 	}
 }
 
-static void set_irq(struct ssb_device *dev, unsigned int irq)
+static void set_irq33k(struct ssb_device *dev, unsigned int irq)
 {
 	unsigned int oldirq = ssb_mips_irq(dev);
 	struct ssb_bus *bus = dev->bus;
@@ -126,7 +131,7 @@ static void set_irq(struct ssb_device *d
 	if (oldirq == 0)
 		ssb_write32(mdev, SSB_INTVEC, (~(1 << irqflag) & ssb_read32(mdev, SSB_INTVEC)));
 	else if (oldirq != 5)
-		clear_irq(bus, oldirq);
+		clear_irq33k(bus, oldirq);
 
 	/* assign the new one */
 	if (irq == 0) {
@@ -135,9 +140,9 @@ static void set_irq(struct ssb_device *d
 		u32 ipsflag = ssb_read32(mdev, SSB_IPSFLAG);
 		if ((ipsflag & ipsflag_irq_mask[irq]) != ipsflag_irq_mask[irq]) {
 			u32 oldipsflag = (ipsflag & ipsflag_irq_mask[irq]) >> ipsflag_irq_shift[irq];
-			struct ssb_device *olddev = find_device(dev, oldipsflag);
+			struct ssb_device *olddev = find_device33k(dev, oldipsflag);
 			if (olddev)
-				set_irq(olddev, 0);
+				set_irq33k(olddev, 0);
 		}
 		irqflag <<= ipsflag_irq_shift[irq];
 		irqflag |= (ipsflag & ~ipsflag_irq_mask[irq]);
@@ -148,6 +153,17 @@ static void set_irq(struct ssb_device *d
 		    dev->id.coreid, oldirq+2, irq+2);
 }
 
+static void set_irq(struct ssb_device *dev, unsigned int irq)
+{
+	switch (dev->bus->mipscore.dev->id.coreid) {
+	case SSB_DEV_MIPS:
+	case SSB_DEV_MIPS_3302:
+		return set_irq33k(dev, irq);
+	default:
+		SSB_BUG_ON(1);
+	}
+}
+
 static void print_irq(struct ssb_device *dev, unsigned int irq)
 {
 	int i;
@@ -275,6 +291,15 @@ void ssb_mipscore_init(struct ssb_mipsco
 
 	ssb_dprintk(KERN_INFO PFX "Initializing MIPS core...\n");
 
+	switch (mcore->dev->id.coreid) {
+	case SSB_DEV_MIPS:
+	case SSB_DEV_MIPS_3302:
+	        mcore->mips_irq = ssb_mips_irq33k;
+	        break;
+	default:
+	        SSB_BUG_ON(1);
+	}
+
 	bus = mcore->dev->bus;
 	hz = ssb_clockspeed(bus);
 	if (!hz)
--- linux-3.3.8.orig/include/linux/ssb/ssb_driver_mips.h	2012-10-28 12:06:20.261347644 +0200
+++ linux-3.3.8/include/linux/ssb/ssb_driver_mips.h	2012-10-28 12:11:19.521327181 +0200
@@ -28,6 +28,7 @@ struct ssb_mipscore {
 
 	struct ssb_pflash pflash;
 	u32 (*irqflag)(struct ssb_device *dev);
+	unsigned int (*mips_irq)(struct ssb_device *dev);
 };
 
 extern void ssb_mipscore_init(struct ssb_mipscore *mcore);
